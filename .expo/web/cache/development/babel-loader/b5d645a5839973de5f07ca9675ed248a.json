{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mansa\\\\shopping\\\\src\\\\cart.js\";\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector } from 'react-redux';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport NumericInput from 'react-native-numeric-input';\n\nvar cart = function cart() {\n  var Cart = useSelector(function (state) {\n    return state.Cart.CartItems;\n  });\n  return React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, Cart !== null ? React.createElement(FlatList, {\n    data: Cart,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.outer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.image\n        },\n        style: {\n          width: '20%',\n          height: '100%'\n        },\n        resizeMode: 'contain',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }), React.createElement(NumericInput, {\n        value: _this.state.value,\n        onChange: function onChange(value) {\n          return _this.setState({\n            value: value\n          });\n        },\n        onLimitReached: function onLimitReached(isMax, msg) {\n          return console.log(isMax, msg);\n        },\n        totalWidth: 240,\n        totalHeight: 50,\n        iconSize: 25,\n        step: 1,\n        valueType: \"real\",\n        minValue: item.Qty,\n        maxValue: 5,\n        textColor: \"#B0228C\",\n        iconStyle: {\n          color: 'white'\n        },\n        rightButtonBackgroundColor: \"#EA3788\",\n        leftButtonBackgroundColor: \"#E56B70\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }\n      }, \"Rs \", item.price), React.createElement(Icon.Button, {\n        name: \"delete\",\n        size: 20,\n        color: \"crimson\",\n        backgroundColor: \"#fff\",\n        onPress: function onPress() {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 26\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }\n  }, \"no cart items\"));\n};\n\nexport default cart;\nvar styles = StyleSheet.create({\n  outer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: Dimensions.get('window').width,\n    height: 80,\n    backgroundColor: '#fff',\n    justifyContent: 'space-between',\n    marginBottom: 5\n  },\n  inner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  image: {\n    width: '100%',\n    height: '90%',\n    flex: 3\n  },\n  text: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    color: 'grey'\n  }\n});","map":{"version":3,"sources":["C:/Users/mansa/shopping/src/cart.js"],"names":["React","useSelector","DropDownPicker","Icon","NumericInput","cart","Cart","state","CartItems","alignItems","justifyContent","backgroundColor","item","styles","outer","uri","image","width","height","value","setState","isMax","msg","console","log","Qty","color","text","price","_id","StyleSheet","create","flexDirection","Dimensions","get","marginBottom","inner","flex","fontSize","fontWeight","alignSelf"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Text,View,FlatList,Image,Dimensions,StyleSheet} from \"react-native\";\r\nimport {useSelector} from 'react-redux';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\nimport NumericInput from 'react-native-numeric-input'\r\n\r\nconst cart=()=>{\r\n\r\n    const Cart=useSelector(state => state.Cart.CartItems)\r\n\r\n    return(\r\n        <View style={{alignItems:'center',justifyContent:'center',backgroundColor:'#fff'}}>\r\n            {\r\n                Cart!==null ? (\r\n                    <FlatList\r\n        data={Cart}\r\n        renderItem={({item})=>(\r\n            <View style={styles.outer}>\r\n            <Image source={{ uri: item.image }} style={{width:'20%',height:'100%'}} resizeMode={'contain'} />\r\n            <NumericInput \r\n            value={this.state.value} \r\n            onChange={value => this.setState({value})} \r\n            onLimitReached={(isMax,msg) => console.log(isMax,msg)}\r\n            totalWidth={240} \r\n            totalHeight={50} \r\n            iconSize={25}\r\n            step={1}\r\n            valueType='real'\r\n            minValue={item.Qty}\r\n            maxValue={5}\r\n            textColor='#B0228C' \r\n            iconStyle={{ color: 'white' }} \r\n            rightButtonBackgroundColor='#EA3788' \r\n            leftButtonBackgroundColor='#E56B70'/>\r\n                         <Text style={styles.text}>Rs {item.price}</Text>\r\n                         <Icon.Button name='delete' size={20} color='crimson' backgroundColor='#fff' onPress={()=>{}}\r\n         />\r\n            </View>\r\n\r\n        )}\r\n        keyExtractor={(item) => item._id}\r\n       \r\n      />\r\n                ): <Text>no cart items</Text>\r\n            }\r\n            \r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default cart;\r\n\r\nconst styles = StyleSheet.create({\r\n    outer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width: Dimensions.get('window').width,\r\n        height: 80,\r\n        backgroundColor: '#fff',\r\n       justifyContent:'space-between',\r\n        marginBottom: 5,\r\n        \r\n\r\n    },\r\n    inner: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n\r\n\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: '90%',\r\n        flex: 3\r\n\r\n\r\n\r\n    },\r\n    text: {\r\n        fontSize: 15,\r\n        fontWeight:'bold',\r\n        alignSelf: 'center',\r\n        color: 'grey',\r\n       \r\n    }\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}