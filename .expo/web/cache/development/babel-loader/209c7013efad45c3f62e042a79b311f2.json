{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mansa\\\\shopping\\\\src\\\\cart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, connect } from 'react-redux';\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport NumericInput from 'react-native-numeric-input';\nimport { AddCart } from \"../actions/cart\";\n\nvar cart = function cart(_ref) {\n  var AddCart = _ref.AddCart;\n\n  var _useState = useState({\n    access: false,\n    Qty: 0,\n    _id: 0,\n    image: '',\n    name: '',\n    price: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      cart = _useState2[0],\n      setcart = _useState2[1];\n\n  useEffect(function () {\n    if (cart.access) {\n      AddCart({\n        cart: cart\n      });\n      setcart(_objectSpread(_objectSpread({}, cart), {}, {\n        access: false\n      }));\n    }\n  }, [cart.access]);\n  var Cart = useSelector(function (state) {\n    return state.Cart.CartItems;\n  });\n  return React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, Cart !== null ? React.createElement(FlatList, {\n    data: Cart,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.outer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.image\n        },\n        style: {\n          width: '20%',\n          height: '100%'\n        },\n        resizeMode: 'contain',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }\n      }), React.createElement(NumericInput, {\n        onChange: function onChange(value) {\n          setcart(_objectSpread(_objectSpread({}, cart), {}, {\n            Qty: value,\n            _id: item.value,\n            image: item.image,\n            name: item.name,\n            price: item.price,\n            access: true\n          }));\n        },\n        minValue: 1,\n        maxValue: 5,\n        value: item.Qty,\n        totalWidth: 80,\n        totalHeight: 35,\n        onLimitReached: function onLimitReached() {},\n        step: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, \"Rs \", item.price * item.Qty), React.createElement(Icon.Button, {\n        name: \"delete\",\n        size: 20,\n        color: \"crimson\",\n        backgroundColor: \"#fff\",\n        onPress: function onPress() {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"no cart items\"));\n};\n\nexport default connect(null, {\n  AddCart: AddCart\n})(cart);\nvar styles = StyleSheet.create({\n  outer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: Dimensions.get('window').width,\n    height: 80,\n    backgroundColor: '#fff',\n    justifyContent: 'space-between',\n    marginTop: 10,\n    borderRadius: 10\n  },\n  inner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  image: {\n    width: '100%',\n    height: '90%',\n    flex: 3\n  },\n  text: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    color: 'grey'\n  }\n});","map":{"version":3,"sources":["C:/Users/mansa/shopping/src/cart.js"],"names":["React","useEffect","useState","useSelector","connect","Icon","NumericInput","AddCart","cart","access","Qty","_id","image","name","price","setcart","Cart","state","CartItems","alignItems","justifyContent","item","styles","outer","uri","width","height","value","text","StyleSheet","create","flexDirection","Dimensions","get","backgroundColor","marginTop","borderRadius","inner","flex","fontSize","fontWeight","alignSelf","color"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,OAAT;;AAEA,IAAMC,IAAI,GAAG,oBAAiB;AAAA,MAAdD,OAAc,QAAdA,OAAc;;AAAA,kBAEFL,QAAQ,CAAC;AAC7BO,IAAAA,MAAM,EAAE,KADqB;AAE7BC,IAAAA,GAAG,EAAE,CAFwB;AAG7BC,IAAAA,GAAG,EAAE,CAHwB;AAI7BC,IAAAA,KAAK,EAAE,EAJsB;AAK7BC,IAAAA,IAAI,EAAE,EALuB;AAM7BC,IAAAA,KAAK,EAAE;AANsB,GAAD,CAFN;AAAA;AAAA,MAEnBN,IAFmB;AAAA,MAEbO,OAFa;;AAY1Bd,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGO,IAAI,CAACC,MAAR,EAAe;AACXF,MAAAA,OAAO,CAAC;AAACC,QAAAA,IAAI,EAAJA;AAAD,OAAD,CAAP;AACAO,MAAAA,OAAO,iCACAP,IADA;AAEHC,QAAAA,MAAM,EAAC;AAFJ,SAAP;AAIH;AACJ,GARQ,EAQP,CAACD,IAAI,CAACC,MAAN,CARO,CAAT;AAUA,MAAMO,IAAI,GAAGb,WAAW,CAAC,UAAAc,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAN,CAAWE,SAAf;AAAA,GAAN,CAAxB;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,cAAc,EAAE;AAAxC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQJ,IAAI,KAAK,IAAT,GACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEA,IADV;AAEI,IAAA,UAAU,EAAE;AAAA,UAAGK,IAAH,SAAGA,IAAH;AAAA,aACR,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEH,IAAI,CAACT;AAAZ,SAAf;AAAoC,QAAA,KAAK,EAAE;AAAEa,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAA3C;AAA6E,QAAA,UAAU,EAAE,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,YAAD;AACI,QAAA,QAAQ,EAAE,kBAACC,KAAD,EAAW;AACjBZ,UAAAA,OAAO,iCACAP,IADA;AAEHE,YAAAA,GAAG,EAAEiB,KAFF;AAGHhB,YAAAA,GAAG,EAAEU,IAAI,CAACM,KAHP;AAIHf,YAAAA,KAAK,EAACS,IAAI,CAACT,KAJR;AAKHC,YAAAA,IAAI,EAACQ,IAAI,CAACR,IALP;AAMHC,YAAAA,KAAK,EAACO,IAAI,CAACP,KANR;AAOHL,YAAAA,MAAM,EAAC;AAPJ,aAAP;AASH,SAXL;AAYI,QAAA,QAAQ,EAAE,CAZd;AAaI,QAAA,QAAQ,EAAE,CAbd;AAcI,QAAA,KAAK,EAAEY,IAAI,CAACX,GAdhB;AAeI,QAAA,UAAU,EAAE,EAfhB;AAgBI,QAAA,WAAW,EAAE,EAhBjB;AAiBI,QAAA,cAAc,EAAE,0BAAM,CAAG,CAjB7B;AAkBI,QAAA,IAAI,EAAE,CAlBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAqBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEY,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA8BP,IAAI,CAACP,KAAL,GAAaO,IAAI,CAACX,GAAhD,CArBJ,EAsBI,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAE,EAAjC;AAAqC,QAAA,KAAK,EAAC,SAA3C;AAAqD,QAAA,eAAe,EAAC,MAArE;AAA4E,QAAA,OAAO,EAAE,mBAAM,CAAG,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBJ,CADQ;AAAA,KAFhB;AA8BI,IAAA,YAAY,EAAE,sBAACW,IAAD;AAAA,aAAUA,IAAI,CAACV,GAAf;AAAA,KA9BlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAkCI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBApCZ,CADJ;AA2CH,CAnED;;AAqEA,eAAeP,OAAO,CAAC,IAAD,EAAO;AAAEG,EAAAA,OAAO,EAAPA;AAAF,CAAP,CAAP,CAA2BC,IAA3B,CAAf;AAEA,IAAMc,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,KAAK,EAAE;AACHQ,IAAAA,aAAa,EAAE,KADZ;AAEHZ,IAAAA,UAAU,EAAE,QAFT;AAGHM,IAAAA,KAAK,EAAEO,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBR,KAH7B;AAIHC,IAAAA,MAAM,EAAE,EAJL;AAKHQ,IAAAA,eAAe,EAAE,MALd;AAMHd,IAAAA,cAAc,EAAE,eANb;AAOHe,IAAAA,SAAS,EAAE,EAPR;AAQHC,IAAAA,YAAY,EAAE;AARX,GADsB;AAc7BC,EAAAA,KAAK,EAAE;AACHN,IAAAA,aAAa,EAAE,KADZ;AAEHZ,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,cAAc,EAAE,QAHb;AAIHK,IAAAA,KAAK,EAAE;AAJJ,GAdsB;AAsB7Bb,EAAAA,KAAK,EAAE;AACHa,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,MAAM,EAAE,KAFL;AAGHY,IAAAA,IAAI,EAAE;AAHH,GAtBsB;AA8B7BV,EAAAA,IAAI,EAAE;AACFW,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,UAAU,EAAE,MAFV;AAGFC,IAAAA,SAAS,EAAE,QAHT;AAIFC,IAAAA,KAAK,EAAE;AAJL;AA9BuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Text, View, FlatList, Image, Dimensions, StyleSheet } from \"react-native\";\r\nimport { useSelector, connect } from 'react-redux';\r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\nimport NumericInput from 'react-native-numeric-input'\r\nimport { AddCart } from '../actions/cart';\r\n\r\nconst cart = ({ AddCart }) => {\r\n\r\n    const [cart, setcart] = useState({\r\n        access: false,\r\n        Qty: 0,\r\n        _id: 0,\r\n        image: '',\r\n        name: '',\r\n        price: '',\r\n\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(cart.access){\r\n            AddCart({cart})\r\n            setcart({\r\n                ...cart,\r\n                access:false\r\n            })\r\n        }\r\n    },[cart.access])\r\n\r\n    const Cart = useSelector(state => state.Cart.CartItems)\r\n\r\n    return (\r\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\r\n            {\r\n                Cart !== null ? (\r\n                    <FlatList\r\n                        data={Cart}\r\n                        renderItem={({ item }) => (\r\n                            <View style={styles.outer}>\r\n                                <Image source={{ uri: item.image }} style={{ width: '20%', height: '100%' }} resizeMode={'contain'} />\r\n                                <NumericInput\r\n                                    onChange={(value) => {\r\n                                        setcart({\r\n                                            ...cart,\r\n                                            Qty: value,\r\n                                            _id: item.value,\r\n                                            image:item.image,\r\n                                            name:item.name,\r\n                                            price:item.price,\r\n                                            access:true\r\n                                        })\r\n                                    }}\r\n                                    minValue={1}\r\n                                    maxValue={5}\r\n                                    value={item.Qty}\r\n                                    totalWidth={80}\r\n                                    totalHeight={35}\r\n                                    onLimitReached={() => { }}\r\n                                    step={1} />\r\n                                <Text style={styles.text}>Rs {item.price * item.Qty}</Text>\r\n                                <Icon.Button name='delete' size={20} color='crimson' backgroundColor='#fff' onPress={() => { }}\r\n                                />\r\n                            </View>\r\n\r\n                        )}\r\n                        keyExtractor={(item) => item._id}\r\n\r\n                    />\r\n                ) : <Text>no cart items</Text>\r\n            }\r\n\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default connect(null, { AddCart })(cart);\r\n\r\nconst styles = StyleSheet.create({\r\n    outer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width: Dimensions.get('window').width,\r\n        height: 80,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'space-between',\r\n        marginTop: 10,\r\n        borderRadius: 10\r\n\r\n\r\n\r\n    },\r\n    inner: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n\r\n\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: '90%',\r\n        flex: 3\r\n\r\n\r\n\r\n    },\r\n    text: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        alignSelf: 'center',\r\n        color: 'grey',\r\n\r\n    }\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}