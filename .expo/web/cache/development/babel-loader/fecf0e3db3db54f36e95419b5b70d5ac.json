{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mansa\\\\shopping\\\\src\\\\cart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector } from 'react-redux';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport Icon from \"@expo/vector-icons/AntDesign\";\n\nvar cart = function cart() {\n  var Cart = useSelector(function (state) {\n    return state.Cart.CartItems;\n  });\n  return React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, Cart !== null ? React.createElement(FlatList, {\n    data: Cart,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.outer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.image\n        },\n        style: {\n          width: '20%',\n          height: '100%'\n        },\n        resizeMode: 'contain',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          alignSelf: 'center',\n          width: '15%',\n          height: '100%',\n          flexDirection: 'row',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, React.createElement(DropDownPicker, {\n        items: [{\n          label: '1',\n          value: 1\n        }, {\n          label: '2',\n          value: 2\n        }, {\n          label: '3',\n          value: 3\n        }, {\n          label: '4',\n          value: 4\n        }],\n        defaultValue: item.Qty,\n        containerStyle: {\n          height: 40,\n          width: '100%',\n          alignSelf: 'center'\n        },\n        style: {\n          backgroundColor: 'lightsteelblue'\n        },\n        itemStyle: {\n          justifyContent: 'center'\n        },\n        dropDownStyle: {\n          backgroundColor: '#fafafa'\n        },\n        onChangeItem: function onChangeItem(event) {\n          setcart(_objectSpread(_objectSpread({}, cart), {}, {\n            Qty: event.value\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      })), React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 26\n        }\n      }, \"Rs \", item.price), React.createElement(Icon.Button, {\n        name: \"delete\",\n        size: 20,\n        color: \"crimson\",\n        backgroundColor: \"#fff\",\n        onPress: function onPress() {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 26\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }\n  }, \"no cart items\"));\n};\n\nexport default cart;\nvar styles = StyleSheet.create({\n  outer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: Dimensions.get('window').width,\n    height: 80,\n    backgroundColor: '#fff',\n    justifyContent: 'space-between',\n    marginBottom: 5\n  },\n  inner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  image: {\n    width: '100%',\n    height: '90%',\n    flex: 3\n  },\n  text: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    color: 'grey'\n  }\n});","map":{"version":3,"sources":["C:/Users/mansa/shopping/src/cart.js"],"names":["React","useSelector","DropDownPicker","Icon","cart","Cart","state","CartItems","alignItems","justifyContent","backgroundColor","item","styles","outer","uri","image","width","height","alignSelf","flexDirection","label","value","Qty","event","setcart","text","price","_id","StyleSheet","create","Dimensions","get","marginBottom","inner","flex","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Text,View,FlatList,Image,Dimensions,StyleSheet} from \"react-native\";\r\nimport {useSelector} from 'react-redux';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\n\r\nconst cart=()=>{\r\n\r\n    const Cart=useSelector(state => state.Cart.CartItems)\r\n\r\n    return(\r\n        <View style={{alignItems:'center',justifyContent:'center',backgroundColor:'#fff'}}>\r\n            {\r\n                Cart!==null ? (\r\n                    <FlatList\r\n        data={Cart}\r\n        renderItem={({item})=>(\r\n            <View style={styles.outer}>\r\n            <Image source={{ uri: item.image }} style={{width:'20%',height:'100%'}} resizeMode={'contain'} />\r\n            <View style={{ alignSelf: 'center', width:'15%',height:'100%',flexDirection: 'row', justifyContent: 'center'}}>\r\n                        <DropDownPicker\r\n                            items={[\r\n                                { label: '1', value: 1 },\r\n                                { label: '2', value: 2 },\r\n                                { label: '3', value: 3 },\r\n                                { label: '4', value: 4 },\r\n\r\n                            ]}\r\n                            defaultValue={item.Qty}\r\n                            containerStyle={{ height: 40, width: '100%', alignSelf: 'center' }}\r\n                            style={{ backgroundColor: 'lightsteelblue' }}\r\n                            itemStyle={{\r\n                                justifyContent: 'center'\r\n                            }}\r\n                            dropDownStyle={{ backgroundColor: '#fafafa' }}\r\n                            onChangeItem={(event) => {\r\n                                setcart({\r\n                                    ...cart,\r\n                                    Qty: event.value\r\n                                })\r\n                            }}\r\n                        /></View>\r\n                         <Text style={styles.text}>Rs {item.price}</Text>\r\n                         <Icon.Button name='delete' size={20} color='crimson' backgroundColor='#fff' onPress={()=>{}}\r\n         />\r\n            </View>\r\n\r\n        )}\r\n        keyExtractor={(item) => item._id}\r\n       \r\n      />\r\n                ): <Text>no cart items</Text>\r\n            }\r\n            \r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default cart;\r\n\r\nconst styles = StyleSheet.create({\r\n    outer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width: Dimensions.get('window').width,\r\n        height: 80,\r\n        backgroundColor: '#fff',\r\n       justifyContent:'space-between',\r\n        marginBottom: 5,\r\n        \r\n\r\n    },\r\n    inner: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n\r\n\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: '90%',\r\n        flex: 3\r\n\r\n\r\n\r\n    },\r\n    text: {\r\n        fontSize: 15,\r\n        fontWeight:'bold',\r\n        alignSelf: 'center',\r\n        color: 'grey',\r\n       \r\n    }\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}