{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mansa\\\\shopping\\\\src\\\\Details.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect, useSelector } from 'react-redux';\nimport { Rating } from 'react-native-ratings';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport { AddCart } from \"../actions/cart\";\n\nvar Details = function Details(_ref) {\n  var route = _ref.route,\n      AddCart = _ref.AddCart;\n  var Selected = route.params.Selected;\n\n  var _useState = useState({\n    Qty: 0,\n    _id: 0,\n    image: '',\n    name: '',\n    price: '',\n    access: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      cart = _useState2[0],\n      setcart = _useState2[1];\n\n  useEffect(function () {\n    if (cart.access) {\n      AddCart({\n        cart: cart\n      });\n      setcart(_objectSpread(_objectSpread({}, cart), {}, {\n        access: false\n      }));\n    }\n  }, [cart.access]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, Selected != null ? React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.outer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: Selected.image\n    },\n    style: styles.image,\n    resizeMode: 'contain',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: styles.inner,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, {\n      fontWeight: 'bold'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, Selected.name), React.createElement(Text, {\n    style: [styles.text, {\n      color: 'brown',\n      fontSize: 15,\n      marginLeft: '15%'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"Rs \", Selected.price)), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, Selected.description), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, React.createElement(Rating, {\n    type: \"star\",\n    ratingCount: 5,\n    imageSize: 20,\n    onFinishRating: function onFinishRating() {},\n    startingValue: Selected.rating,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'lightskyblue',\n      fontSize: 15,\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, \"(\", Selected.count, \")\"))), React.createElement(View, {\n    style: {\n      alignSelf: 'center',\n      width: '100%',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, React.createElement(DropDownPicker, {\n    items: [{\n      label: 'Qty',\n      value: 'Qty'\n    }, {\n      label: '1',\n      value: 1\n    }, {\n      label: '2',\n      value: 2\n    }, {\n      label: '3',\n      value: 3\n    }, {\n      label: '4',\n      value: 4\n    }],\n    defaultValue: 'Qty',\n    containerStyle: {\n      height: 40,\n      width: '20%',\n      alignSelf: 'center',\n      margin: 20\n    },\n    style: {\n      backgroundColor: 'lightsteelblue'\n    },\n    itemStyle: {\n      justifyContent: 'center'\n    },\n    dropDownStyle: {\n      backgroundColor: '#fafafa'\n    },\n    onChangeItem: function onChangeItem(event) {\n      setcart(_objectSpread(_objectSpread({}, cart), {}, {\n        Qty: event.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: [{\n      width: \"50%\",\n      margin: 20,\n      alignSelf: 'center'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      setcart(_objectSpread(_objectSpread({}, cart), {}, {\n        _id: Selected._id,\n        image: Selected.image,\n        name: Selected.name,\n        price: Selected.price,\n        access: true\n      }));\n    },\n    title: \"Add to Cart\",\n    color: \"crimson\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }))), React.createElement(Rating, {\n    type: \"star\",\n    ratingCount: 5,\n    imageSize: 20,\n    onFinishRating: function onFinishRating() {\n      console.log('rating done');\n    },\n    startingValue: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })) : null);\n};\n\nvar styles = StyleSheet.create({\n  outer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').width,\n    justifyContent: 'center',\n    marginBottom: 5,\n    marginTop: 5\n  },\n  inner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    marginBottom: 10\n  },\n  image: {\n    width: '100%',\n    height: '90%',\n    flex: 1,\n    marginTop: 20\n  },\n  text: {\n    fontSize: 15,\n    alignSelf: 'center',\n    color: 'grey',\n    marginTop: 20\n  }\n});\nexport default connect(null, {\n  AddCart: AddCart\n})(Details);","map":{"version":3,"sources":["C:/Users/mansa/shopping/src/Details.js"],"names":["React","useState","useEffect","connect","useSelector","Rating","DropDownPicker","AddCart","Details","route","Selected","params","Qty","_id","image","name","price","access","cart","setcart","styles","outer","uri","inner","text","fontWeight","color","fontSize","marginLeft","description","flexDirection","alignItems","justifyContent","margin","rating","count","alignSelf","width","label","value","height","backgroundColor","event","console","log","StyleSheet","create","Dimensions","get","marginBottom","marginTop","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, Image, StyleSheet, Dimensions, Button, TouchableOpacity } from \"react-native\";\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Rating } from 'react-native-ratings';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { AddCart } from '../actions/cart';\r\n\r\n\r\n\r\nconst Details = ({ route, AddCart }) => {\r\n\r\n    const { Selected } = route.params;\r\n    \r\n\r\n\r\n\r\n    const [cart, setcart] = useState({\r\n        Qty: 0,\r\n        _id: 0,\r\n        image: '',\r\n        name: '',\r\n        price: '',\r\n        access: false,\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (cart.access) {\r\n            AddCart({ cart })\r\n            setcart({\r\n                ...cart,\r\n                access: false\r\n            })\r\n        }\r\n    }, [cart.access])\r\n\r\n\r\n\r\n    return (\r\n        <View>\r\n            { Selected != null ? (\r\n                <View>\r\n                    <View style={styles.outer}>\r\n                        <Image source={{ uri: Selected.image }} style={styles.image} resizeMode={'contain'} />\r\n\r\n                        <View style={styles.inner}>\r\n                            <Text style={[styles.text, { fontWeight: 'bold' }]}>{Selected.name}</Text>\r\n                            <Text style={[styles.text, { color: 'brown', fontSize: 15, marginLeft: '15%' }]}>Rs {Selected.price}</Text>\r\n\r\n\r\n                        </View>\r\n                        <Text>{Selected.description}</Text>\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'center', margin: 20 }}>\r\n                            <Rating\r\n                                type='star'\r\n                                ratingCount={5}\r\n                                imageSize={20}\r\n                                onFinishRating={() => { }}\r\n                                startingValue={Selected.rating}\r\n                            />\r\n                            <Text style={{ color: 'lightskyblue', fontSize: 15, marginLeft: 10 }}>({Selected.count})</Text>\r\n\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n                    <View style={{ alignSelf: 'center', width: '100%', flexDirection: 'row', justifyContent: 'center' }}>\r\n                        <DropDownPicker\r\n                            items={[\r\n                                { label: 'Qty', value: 'Qty' },\r\n                                { label: '1', value: 1 },\r\n                                { label: '2', value: 2 },\r\n                                { label: '3', value: 3 },\r\n                                { label: '4', value: 4 },\r\n\r\n                            ]}\r\n                            defaultValue={'Qty'}\r\n                            containerStyle={{ height: 40, width: '20%', alignSelf: 'center', margin: 20 }}\r\n                            style={{ backgroundColor: 'lightsteelblue' }}\r\n                            itemStyle={{\r\n                                justifyContent: 'center'\r\n                            }}\r\n                            dropDownStyle={{ backgroundColor: '#fafafa' }}\r\n                            onChangeItem={(event) => {\r\n                                setcart({\r\n                                    ...cart,\r\n                                    Qty: event.value\r\n                                })\r\n                            }}\r\n                        />\r\n                        <View style={[{ width: \"50%\", margin: 20, alignSelf: 'center' }]}>\r\n                            <Button\r\n                                onPress={() => {\r\n                                    setcart({\r\n                                        ...cart,\r\n                                        _id: Selected._id,\r\n                                        image: Selected.image,\r\n                                        name: Selected.name,\r\n                                        price: Selected.price,\r\n                                        access: true\r\n                                    })\r\n                                }}\r\n                                title=\"Add to Cart\"\r\n                                color='crimson'\r\n\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <Rating\r\n                        type='star'\r\n                        ratingCount={5}\r\n                        imageSize={20}\r\n                        onFinishRating={() => { console.log('rating done') }}\r\n                        startingValue={0}\r\n                    />\r\n                </View>\r\n\r\n            ) : null}\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    outer: {\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: Dimensions.get('window').width,\r\n        height: Dimensions.get('window').width,\r\n        justifyContent: 'center',\r\n        marginBottom: 5,\r\n        marginTop: 5\r\n\r\n    },\r\n    inner: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        marginBottom: 10\r\n\r\n\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: '90%',\r\n        flex: 1,\r\n        marginTop: 20\r\n    },\r\n    text: {\r\n        fontSize: 15,\r\n        alignSelf: 'center',\r\n        color: 'grey',\r\n        marginTop: 20\r\n    }\r\n})\r\n\r\n\r\nexport default connect(null, { AddCart })(Details);"]},"metadata":{},"sourceType":"module"}